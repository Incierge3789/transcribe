
## プロジェクトのセットアップガイド

このガイドでは、共有URLからのZIPファイルのダウンロードから、サウンドデバイスのセットアップ、バックエンドFlaskアプリケーションの起動、フロントエンドReactアプリケーションの起動までの手順を説明します。

### 1. ZIPファイルのダウンロードと解凍

1. **ZIPファイルのダウンロード**
   - 共有されたURLからZIPファイルをダウンロードします。
   
2. **ZIPファイルの解凍**
   - ダウンロードしたZIPファイルを解凍します。解凍すると、`transcribe`というディレクトリが作成されます。

### 2. サウンドデバイスのセットアップ

MacでPyAudioを使用するための設定とサウンドデバイスのセットアップを行います。

1. **Homebrewのインストール**
   Homebrewがインストールされていない場合は、以下のコマンドをターミナルで実行してインストールします。
   ```sh
   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
   ```

2. **必要なライブラリのインストール**
   PyAudioをインストールする前に、必要なPortAudioライブラリをインストールします。
   ```sh
   brew install portaudio
   ```

3. **PyAudioのインストール**
   次に、PyAudioをインストールします。
   ```sh
   pip install pyaudio
   ```

4. **サウンド設定の確認**
   - Macの「システム環境設定」 > 「サウンド」に移動します。
   - 入力タブで使用するマイクデバイスを確認し、選択します。

5. **オーディオデバイスの設定**
   - 「Audio MIDI設定」アプリケーションを開きます（Launchpad > そのほか > Audio MIDI設定）。
   - 使用するオーディオデバイスを確認し、必要に応じてサンプリングレートなどの設定を行います。

6. **マイクのアクセス許可**
   - 「システム環境設定」 > 「セキュリティとプライバシー」 > 「プライバシー」タブに移動します。
   - 左側のメニューから「マイク」を選択し、使用するアプリケーションにマイクのアクセスを許可します。

### 3. バックエンドFlaskアプリケーションのセットアップと起動

1. **ディレクトリに移動**
   ZIPファイルを解凍した後、解凍された`transcribe`ディレクトリに移動します。
   ```sh
   cd /path/to/transcribe
   ```

2. **Python依存関係のインストール**
   必要なPythonパッケージをインストールします。
   ```sh
   pip install -r requirements.txt
   ```

3. **環境変数の設定**
   `.env`ファイルを作成し、APIキーを設定します。
   ```sh
   touch .env
   echo "OPENAI_API_KEY=your_openai_api_key_here" > .env
   ```

4. **アプリケーションの起動**
   アプリケーションを起動します。
   ```sh
   python app.py
   ```

### 4. フロントエンドReactアプリケーションのセットアップと起動

1. **ディレクトリに移動**
   `transcription-app`ディレクトリに移動します。
   ```sh
   cd transcription-app
   ```

2. **Node.jsパッケージのインストール**
   Node.jsパッケージをインストールします。
   ```sh
   npm install
   ```

3. **Reactアプリケーションのビルド**
   Reactアプリケーションをビルドします。
   ```sh
   npm run build
   ```

4. **Reactアプリケーションの起動**
   開発環境でReactアプリケーションを起動します。
   ```sh
   npm start
   ```

### 動作確認

- ブラウザで`http://localhost:3000`にアクセスして、Reactアプリケーションが正しく表示されることを確認します。
- Flaskバックエンドが`http://localhost:8080`で動作していることを確認します。

以上の手順で、プロジェクトのセットアップが完了します。問題が発生した場合は、エラーメッセージを確認して適宜対応してください。

